name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create example KinD config
        run: |
          cat > kind-cluster.yml << EOF
          apiVersion: kind.x-k8s.io/v1alpha4
          kind: Cluster
          nodes:
          - role: control-plane
          - role: worker
          - role: worker
          - role: worker
          EOF
      - name: Set up Kubernetes with OpenObserve
        uses: ./
        with:
          openobserve_endpoint: ${{ secrets.OPENOBSERVE_URL }}/api/default/  # required
          openobserve_username: ${{ secrets.OPENOBSERVE_USERNAME }}          # required
          openobserve_password: ${{ secrets.OPENOBSERVE_PASSWORD }}          # required
          openobserve_stream: kind-openobserve-action  # optional
          kind_config: ./kind-cluster.yml              # optional
          namespace: monitoring                        # optional
          wait_until_ready: true                       # optional
          scrape_interval_secs: 1                      # optional
      - name: Create example pod
        run: |
          kubectl apply -f - << EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: example-pod
            labels:
              app.kubernetes.io/name: example-pod
          spec:
            containers:
            - name: my-container
              image: busybox
              command:
              - sh
              - -c
              - |
                echo "counting to 10"
                seq 10
                echo "taking a quick break..."
                sleep 5
                echo "counting down from 5 by 2"
                seq 5 -2 1
                echo "going to sleep again..."
                sleep 5
                echo "done"
          EOF
      - name: Wait for pod to finish
        run: kubectl wait --for=condition=ready --timeout=300s pod/example-pod
      - name: Delete pod
        run: kubectl delete pod example-pod
      - name: Get Vector logs
        run: |
          for pod in $(kubectl get pod -o name -n monitoring); do
            echo ">>>> $pod <<<<"
            kubectl logs -n monitoring $pod
          done
